@model Recruitment.Models.VacancySearchViewModel
@{
    ViewData["Title"] = "Home Page";
}
<!-- ======= Breadcrumbs ======= -->
<section class="breadcrumbs">
    <div class="container">
        <h2>Recent Job Vaccancies</h2>
    </div>
</section><!-- End Breadcrumbs -->
<!-- ======= Blog Section ======= -->
@*@using (Html.BeginForm())
{*@
    <section id="blog" class="blog">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 entries">
                    <article class="Card">
                        <div class="row form-group">
                            <div class="col-sm-6">
                                <label class="control-label" style="font-weight: bold;">Job Category</label>
                                @Html.DropDownListFor(model => model.CategoryID, new SelectList(ViewBag.Categories, "Id", "Name"), "All",
new { @class = "form-control", @id = "ddl_Category" })
                            </div>
                            <div class="col-sm-6">
                                <label class="control-label" style="font-weight: bold;">Job Title</label>
                                @Html.DropDownListFor(model => model.JobTitleID, new SelectList(ViewBag.JobTitle, "Id", "Title"),"All",
new { @class = "form-control", @id = "ddl_JobTitle" })

                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-6">
                                <label class="control-label" style="font-weight: bold;">Country</label>
                                @Html.DropDownListFor(model => model.CountryID, new SelectList(ViewBag.Countries, "Id", "Name"), "All",
new { @class = "form-control", @id = "ddl_Country" })
                            </div>
                            <div class="col-sm-6">
                                <label class="control-label" style="font-weight: bold;">Salary</label>
                                @Html.DropDownListFor(model => model.SalaryID, new SelectList(ViewBag.Salaries, "Id", "Range"), "All",
new { @class = "form-control", @id = "ddl_Salary" })

                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-6">
                                <label class="control-label" style="font-weight: bold;">Experience</label>
                                @Html.DropDownListFor(model => model.YearsOfExperienceID, new SelectList(ViewBag.Experiences, "Id", "YearsOfExperience"), "All",
new { @class = "form-control", @id = "ddl_YearsOfExperience" })
                            </div>
                            <div class="col-sm-6">
                                <label class="control-label" style="font-weight: bold;">Keywords</label>
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Keywords", @id = "DescriptionIp" } })

                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-12 text-center">
                                <input type="submit" value=Search class="BtnSearch" />
                            </div>
                        </div>
                    </article>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-10 entries">
                    @foreach (var item in Model.vacancyModels)
                    {
                        <article class="entry">
                            <h2 class="entry-title">
                                <a href="blog-single.html">@item.JobTitle</a>
                            </h2>
                            <div class="entry-meta">
                                <ul>
                                    <li class="d-flex align-items-center"><i class="bi bi-bookmark"></i> <a href="blog-single.html">Category:@item.Category</a></li>
                                    <li class="d-flex align-items-center"><i class="bi bi-clock"></i> <a href="blog-single.html">
                                        <time datetime="2020-01-01">@item.PublishingDate</time></a></li>
                                    <li class="d-flex align-items-center"><i class="bi bi-cash"></i> <a href="blog-single.html">@item.Salary</a></li>
                                    <li class="d-flex align-items-center"><i class="bi bi-flag"></i> <a href="blog-single.html">Country: @item.Country</a></li>
                                    <li class="d-flex align-items-center"><i class="bi bi-explicit"></i> <a href="blog-single.html">@item.YearsOfExperience </a></li>
                                    <li class="d-flex align-items-center"> <a href="blog-single.html">Gender :@item.GenderType</a></li>
                                </ul>
                            </div>
                            <div class="entry-content">
                                <p>
                                    @item.Description
                                </p>
                                <div class="read-more">
                                    <a href="@Url.Action("Details", "Home")">More</a>
                                    <a href="blog-single.html">Apply</a>
                                </div>
                            </div>
                        </article><!-- End blog entry -->
                    }

                </div><!-- End blog entries list -->

            </div>

        </div>
    </section><!-- End Blog Section -->

@*}*@
    @section scripts{
        <script>
            $(document).ready(function () {

                var _categoryID = $("#ddl_Category").val();
                var _jobTitle = $("#ddl_JobTitle").val();
                var _salary = $("#ddl_Salary").val();
                var _country = $("#ddl_Country").val();
                var _YearsOfExperienceID = $("#ddl_YearsOfExperience").val();
                var _Description = $("#DescriptionIp").val();
                var model = {
                    JobTitleID: _jobTitle, CategoryID: _categoryID,
                    Description: _Description,
                    CountryID: _country, Gender: "",
                    YearsOfExperienceID: _YearsOfExperienceID, SalaryID: _salary
                };
                $.ajax({
                cache: false,
                type: "GET",
                    url: "../Home/Get",
                    data: { "vacancySearchViewModel": model },
                success: function (data) {
                    var result = "";
                    $.each(data, function (id, book) {
                        result += '<b>Title : </b>' + book.Title + '<br/>' +
                                    '<b> Author :</b>' + book.Author + '<br/>' +
                                     '<b> Year :</b>' + book.Year + '<br/>' +
                                      '<b> Price :</b>' + book.Price + '<hr/>';
                    });
                    booksDiv.html(result);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve books.');
                }
            });
                $('.BtnSearch').on('click', function () {
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: "../Home/Get",
                        data: { "vacancySearchViewModel": model },
                        success: function (data) {
                            var result = "";
                            $.each(data, function (id, book) {
                                result += '<b>Title : </b>' + book.Title + '<br/>' +
                                    '<b> Author :</b>' + book.Author + '<br/>' +
                                    '<b> Year :</b>' + book.Year + '<br/>' +
                                    '<b> Price :</b>' + book.Price + '<hr/>';
                            });
                            booksDiv.html(result);
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert('Failed to retrieve books.');
                        }
                    });});
                $("#ddl_Category").change(function () {
                    var _categoryID = $(this).val();
                    $.getJSON("../Home/LoadJobTitle", { categoryID: _categoryID },
                        function (classesData) {
                            var select = $("#ddl_JobTitle");
                            select.empty();
                            select.append($('<option/>', {
                                value: 0,
                                text: "All"
                            }));
                            $.each(classesData, function (index, itemData) {
                                select.append($('<option/>', {
                                    value: itemData.value,
                                    text: itemData.text
                                }));
                            });
                        });
                });
            });

        </script>
    }